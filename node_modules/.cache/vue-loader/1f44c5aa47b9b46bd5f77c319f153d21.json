{"remainingRequest":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/src/components/heroes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/src/components/heroes.vue","mtime":1633403671556},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633396448227},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/node_modules/babel-loader/lib/index.js","mtime":1633396448739},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/node_modules/cache-loader/dist/cjs.js","mtime":1633396448227},{"path":"/home/msufyan/Desktop/Vue/vue-getting-started/05-interacting-within-a-component/begin/vue-heroes/node_modules/vue-loader/lib/index.js","mtime":1633396449483}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport {format} from 'date-fns'\nconst inputDateFormat=\"yyyy-mm-dd\"\nconst ourHeroes = [\n  {\n    id: 10,\n    firstName: 'Ella',\n    lastName:'Papa',\n    capeCounter: 1,\n    originDate:format[new Date(2003,9,21),inputDateFormat],\n    description: 'fashionista',\n  },\n  {\n    id: 20,\n    firstName: 'Madelyn',\n    lastName: 'Papa',\n    capeCounter:2,\n    originDate:format[new Date(2000,7,3),inputDateFormat],\n    description: 'the cat whisperer',\n  },\n  {\n    id: 30,\n    firstName: 'Haley',\n    lastName: 'Papa',\n    capeCounter:3,\n    originDate:format[new Date(1996,9,1),inputDateFormat],\n    description: 'pen wielder',\n  },\n  {\n    id: 40,\n    firstName: 'Landon',\n    lastName: 'Papa',\n    capeCounter:4,\n    originDate:format[new Date(1998,10,27),inputDateFormat],\n    description: 'arc trooper',\n  },\n];\nexport default {\n  name: 'Heroes',\n  data() {\n    return {\n      heroes: [],\n      selectedHero:undefined,\n      message:'',\n      capeMessage:'',\n    }\n  },\n  computed: {\n    fullName() {\n      return `${this.selectedHero.firstName} ${this.selectedHero.lastName}`; \n    }\n  },\n  created () { this.loadHeroes()},\n  methods: {\n    async getHeroes(){\n      return new Promise(resolve =>{\n        setTimeout(()=>resolve(ourHeroes),1500);\n      })\n      return ourHeroes;\n    },\n    async loadHeroes(){\n      this.heroes=[];\n      this.message='getting the heroes. please be patient';\n      this.heroes=await this.getHeroes();\n      this.message=\"\";\n    },\n    handleTheCapes(newValue) {\n      const value = parseInt(newValue, 10);\n      switch (value) {\n        case 0:\n          this.capeMessage = 'Where is my cape?';\n          break;\n        case 1:\n          this.capeMessage = 'One is all I need';\n          break;\n        case 2:\n          this.capeMessage = 'Alway have a spare';\n          break;\n        default:\n          this.capeMessage = 'You can never have enough capes';\n          break;\n      }\n    },\n    cancelHero() {\n      this.selectedHero = undefined;\n      this.message = '';\n    },\n    saveHero() {\n      // This only updates when you click the save button\n      this.message = JSON.stringify(this.selectedHero, null, '\\n ');\n    },\n    selectHero(hero) {\n      this.selectedHero = hero;\n    },\n  },\n  watch: {\n    'selectedHero.capeCounter': {\n      immediate: true,\n      handler(newValue, oldValue) {\n        console.log(`Watcher evaluated. old=${oldValue}, new=${newValue}`);\n        this.handleTheCapes(newValue);\n      }\n    }\n  },\n};\n",{"version":3,"sources":["heroes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"heroes.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"content-container\">\n    <div class=\"section content-title-group\">\n      <h2 class=\"title\">Heroes</h2>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column is-3\">\n        <div class=\"card\" v-show=\"heroes.length\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title\">heroes list</p>\n          </header>\n          <ul class=\"list is-hoverable\">\n            <li v-for=\"hero in heroes\" :key=\"hero.id\">\n              <a\n                class=\"list-item\"\n                @click=\"selectHero(hero)\"\n                :class=\"{ 'is-active': selectedHero === hero }\"\n              >\n                <span>{{ hero.firstName }}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"notification is-info\" v-show=\"message\">{{ message }}</div>\n      </div>\n\n      <div class=\"column is-4\" v-if=\"selectedHero\">\n        <div class=\"card\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title\">{{ fullName }}</p>\n          </header>\n          <div class=\"card-content\">\n            <div class=\"content\">\n              <div class=\"field\">\n                <label class=\"label\" for=\"id\">id</label>\n                <label class=\"input\" id=\"id\" readonly>{{\n                  selectedHero.id\n                }}</label>\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"firstName\">first name</label>\n                <input\n                  class=\"input\"\n                  id=\"firstName\"\n                  v-model=\"selectedHero.firstName\"\n                />\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"lastName\">last name</label>\n                <input\n                  class=\"input\"\n                  id=\"lastName\"\n                  v-model=\"selectedHero.lastName\"\n                />\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"description\">description</label>\n                <input\n                  class=\"input\"\n                  id=\"description\"\n                  v-model=\"selectedHero.description\"\n                />\n                <div class=\"field\">\n                <label class=\"label\" for=\"originDate\">origin date</label>\n                <input\n                  type=\"date\"\n                  class=\"input\"\n                  id=\"originDate\"\n                  v-model=\"selectedHero.originDate\"\n                />\n                <p class=\"comment\">\n                  My origin story began on {{selectHero.originDate}}\n                </p>\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"capeCounter\">cape counter</label>\n                <input\n                  class=\"input\"\n                  id=\"capeCounter\"\n                  type=\"number\"\n                  v-model=\"selectedHero.capeCounter\"\n                />\n              </div>\n              <div class=\"field\">\n                <label class=\"label\" for=\"capeMessage\">cape message</label>\n                <label class=\"input\" name=\"capeMessage\">\n                  {{capeMessage}}\n                </label>\n              </div>\n            </div>\n          </div>\n          <footer class=\"card-footer\">\n            <button\n              class=\"link card-footer-item cancel-button\"\n              @click=\"cancelHero()\"\n            >\n              <i class=\"fas fa-undo\"></i>\n              <span>Cancel</span>\n            </button>\n            <button class=\"link card-footer-item\" @click=\"saveHero()\">\n              <i class=\"fas fa-save\"></i>\n              <span>Save</span>\n            </button>\n          </footer>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport {format} from 'date-fns'\nconst inputDateFormat=\"yyyy-mm-dd\"\nconst ourHeroes = [\n  {\n    id: 10,\n    firstName: 'Ella',\n    lastName:'Papa',\n    capeCounter: 1,\n    originDate:format[new Date(2003,9,21),inputDateFormat],\n    description: 'fashionista',\n  },\n  {\n    id: 20,\n    firstName: 'Madelyn',\n    lastName: 'Papa',\n    capeCounter:2,\n    originDate:format[new Date(2000,7,3),inputDateFormat],\n    description: 'the cat whisperer',\n  },\n  {\n    id: 30,\n    firstName: 'Haley',\n    lastName: 'Papa',\n    capeCounter:3,\n    originDate:format[new Date(1996,9,1),inputDateFormat],\n    description: 'pen wielder',\n  },\n  {\n    id: 40,\n    firstName: 'Landon',\n    lastName: 'Papa',\n    capeCounter:4,\n    originDate:format[new Date(1998,10,27),inputDateFormat],\n    description: 'arc trooper',\n  },\n];\nexport default {\n  name: 'Heroes',\n  data() {\n    return {\n      heroes: [],\n      selectedHero:undefined,\n      message:'',\n      capeMessage:'',\n    }\n  },\n  computed: {\n    fullName() {\n      return `${this.selectedHero.firstName} ${this.selectedHero.lastName}`; \n    }\n  },\n  created () { this.loadHeroes()},\n  methods: {\n    async getHeroes(){\n      return new Promise(resolve =>{\n        setTimeout(()=>resolve(ourHeroes),1500);\n      })\n      return ourHeroes;\n    },\n    async loadHeroes(){\n      this.heroes=[];\n      this.message='getting the heroes. please be patient';\n      this.heroes=await this.getHeroes();\n      this.message=\"\";\n    },\n    handleTheCapes(newValue) {\n      const value = parseInt(newValue, 10);\n      switch (value) {\n        case 0:\n          this.capeMessage = 'Where is my cape?';\n          break;\n        case 1:\n          this.capeMessage = 'One is all I need';\n          break;\n        case 2:\n          this.capeMessage = 'Alway have a spare';\n          break;\n        default:\n          this.capeMessage = 'You can never have enough capes';\n          break;\n      }\n    },\n    cancelHero() {\n      this.selectedHero = undefined;\n      this.message = '';\n    },\n    saveHero() {\n      // This only updates when you click the save button\n      this.message = JSON.stringify(this.selectedHero, null, '\\n ');\n    },\n    selectHero(hero) {\n      this.selectedHero = hero;\n    },\n  },\n  watch: {\n    'selectedHero.capeCounter': {\n      immediate: true,\n      handler(newValue, oldValue) {\n        console.log(`Watcher evaluated. old=${oldValue}, new=${newValue}`);\n        this.handleTheCapes(newValue);\n      }\n    }\n  },\n};\n</script>\n"]}]}